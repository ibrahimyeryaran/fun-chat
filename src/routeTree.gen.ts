/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainPageImport } from './routes/main-page'
import { Route as ErrorPageImport } from './routes/error-page'
import { Route as AuthorizationPageImport } from './routes/authorization-page'
import { Route as AboutPageImport } from './routes/about-page'

// Create/Update Routes

const MainPageRoute = MainPageImport.update({
  id: '/main-page',
  path: '/main-page',
  getParentRoute: () => rootRoute,
} as any)

const ErrorPageRoute = ErrorPageImport.update({
  id: '/error-page',
  path: '/error-page',
  getParentRoute: () => rootRoute,
} as any)

const AuthorizationPageRoute = AuthorizationPageImport.update({
  id: '/authorization-page',
  path: '/authorization-page',
  getParentRoute: () => rootRoute,
} as any)

const AboutPageRoute = AboutPageImport.update({
  id: '/about-page',
  path: '/about-page',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about-page': {
      id: '/about-page'
      path: '/about-page'
      fullPath: '/about-page'
      preLoaderRoute: typeof AboutPageImport
      parentRoute: typeof rootRoute
    }
    '/authorization-page': {
      id: '/authorization-page'
      path: '/authorization-page'
      fullPath: '/authorization-page'
      preLoaderRoute: typeof AuthorizationPageImport
      parentRoute: typeof rootRoute
    }
    '/error-page': {
      id: '/error-page'
      path: '/error-page'
      fullPath: '/error-page'
      preLoaderRoute: typeof ErrorPageImport
      parentRoute: typeof rootRoute
    }
    '/main-page': {
      id: '/main-page'
      path: '/main-page'
      fullPath: '/main-page'
      preLoaderRoute: typeof MainPageImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/about-page': typeof AboutPageRoute
  '/authorization-page': typeof AuthorizationPageRoute
  '/error-page': typeof ErrorPageRoute
  '/main-page': typeof MainPageRoute
}

export interface FileRoutesByTo {
  '/about-page': typeof AboutPageRoute
  '/authorization-page': typeof AuthorizationPageRoute
  '/error-page': typeof ErrorPageRoute
  '/main-page': typeof MainPageRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/about-page': typeof AboutPageRoute
  '/authorization-page': typeof AuthorizationPageRoute
  '/error-page': typeof ErrorPageRoute
  '/main-page': typeof MainPageRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/about-page'
    | '/authorization-page'
    | '/error-page'
    | '/main-page'
  fileRoutesByTo: FileRoutesByTo
  to: '/about-page' | '/authorization-page' | '/error-page' | '/main-page'
  id:
    | '__root__'
    | '/about-page'
    | '/authorization-page'
    | '/error-page'
    | '/main-page'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AboutPageRoute: typeof AboutPageRoute
  AuthorizationPageRoute: typeof AuthorizationPageRoute
  ErrorPageRoute: typeof ErrorPageRoute
  MainPageRoute: typeof MainPageRoute
}

const rootRouteChildren: RootRouteChildren = {
  AboutPageRoute: AboutPageRoute,
  AuthorizationPageRoute: AuthorizationPageRoute,
  ErrorPageRoute: ErrorPageRoute,
  MainPageRoute: MainPageRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/about-page",
        "/authorization-page",
        "/error-page",
        "/main-page"
      ]
    },
    "/about-page": {
      "filePath": "about-page.tsx"
    },
    "/authorization-page": {
      "filePath": "authorization-page.tsx"
    },
    "/error-page": {
      "filePath": "error-page.tsx"
    },
    "/main-page": {
      "filePath": "main-page.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
